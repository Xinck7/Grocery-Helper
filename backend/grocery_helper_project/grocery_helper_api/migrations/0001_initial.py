# Generated by Django 3.2.16 on 2023-01-08 05:03

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='name of ingredient', max_length=100)),
                ('location', models.CharField(help_text='krogers/sams/etc', max_length=100)),
                ('ailse', models.DecimalField(decimal_places=0, help_text='where it is in the store approximately', max_digits=10)),
                ('amount', models.DecimalField(decimal_places=0, default=1, help_text='how many do you want? - needs a number', max_digits=10)),
                ('calore_per_serving', models.DecimalField(decimal_places=2, default=0, help_text='calorie number eg 500', max_digits=10)),
                ('serving_amount', models.DecimalField(decimal_places=2, default=0, help_text='how many ounces/pounds? eg number only like 5', max_digits=10)),
                ('obtained', models.BooleanField(default=False, help_text='is it in the cart?')),
                ('price', models.DecimalField(decimal_places=2, help_text='how much in USD? eg 3', max_digits=10)),
                ('picture', models.ImageField(blank=True, help_text='Only pictures are supported through this tool', null=True, upload_to='grocery_helper_api/media')),
                ('added_by', models.CharField(help_text='Added by person', max_length=100)),
                ('show_only_your_added_by', models.BooleanField(default=False, help_text='Show only your stuff or look at the catalog')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='name of ingredient', max_length=100)),
                ('location', models.CharField(help_text='krogers/sams/etc', max_length=100)),
                ('ailse', models.DecimalField(decimal_places=0, help_text='where it is in the store approximately', max_digits=10)),
                ('price', models.DecimalField(decimal_places=2, help_text='how much in USD? eg 3', max_digits=10)),
                ('picture', models.ImageField(blank=True, help_text='Only pictures are supported through this tool', null=True, upload_to='grocery_helper_api/media')),
                ('added_by', models.CharField(help_text='Added by person', max_length=100)),
                ('show_only_your_added_by', models.BooleanField(default=False, help_text='Show only your stuff or look at the catalog')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, help_text='how much in USD? eg 3', max_digits=10)),
                ('time_to_cook', models.DecimalField(decimal_places=1, default=0, help_text='how long to make it start to finish?', max_digits=3)),
                ('added_by', models.CharField(help_text='Added by person', max_length=100)),
                ('show_only_your_added_by', models.BooleanField(default=False, help_text='Show only your stuff or look at the catalog')),
                ('ingredients', models.ManyToManyField(to='grocery_helper_api.Ingredient')),
            ],
        ),
        migrations.CreateModel(
            name='List',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, default=0, help_text='total price of items and ingredients', max_digits=10)),
                ('owner', models.CharField(help_text='Whose list is it anyways?', max_length=100)),
                ('added_by', models.CharField(help_text='Added by person', max_length=100)),
                ('show_only_your_added_by', models.BooleanField(default=False, help_text='Show only your stuff or look at the catalog')),
                ('ingredients', models.ManyToManyField(to='grocery_helper_api.Ingredient')),
                ('items', models.ManyToManyField(to='grocery_helper_api.Item')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('bio', models.TextField(blank=True)),
                ('profile_pic', models.ImageField(blank=True, upload_to='grocery_helper_api/media/user_profiles')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
